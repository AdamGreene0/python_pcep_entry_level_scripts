#*******Absolute beginning of the script***************

#Developer Name: Akinwale "Wally" Owi
#Program purpose: Rebuild Tic Tac Toe: this time with the lab requested functions


#**********Beginning of computations*************


#import(s)
import random

#Players
player_1 = "o" 

#~~~~~~~~~~Beginning of creating the list/board creation
board = []
still_open = "~" 
board =[[still_open for rows in range(3)] for columns in range(3)]


board[0][0] = 1
board[0][1] = 2
board[0][2] = 3

board[1][0] = 4
board[1][1] = 5
board[1][2] = 6

board[2][0] = 7
board[2][1] = 8
board[2][2] = 9

#~~~~~~~~~~End of board creation~~~~


#~~~~~~~~~~Beginning of fxs

#~~Beginning of display board - 1 prints current board
def display_board(board):
    print("The board currently looks like:", board)

#~~End of display board - 1 prints current board 2 prints the current game store

#~~Beginning of enter_choice(board):
def enter_choice(board):

    display_board(board)
    choice_player = int(input("Please enter your move: "))
    print(choice_player)

    #1 condition if
    if  choice_player == 1:
        #open check
        if (board [0][0] != 1):
            enter_choice(board)
        else:
            board [0][0] = player_1        
            print("After the player the move, the board:", board)
                
    elif choice_player == 2:

        #open check
        if (board [0][1] != 2):
            enter_choice(board)
        else:
            board [0][1] = player_1     
            print("After the player the move, the board:", board)


    elif choice_player == 3:

        #open check
        if (board [0][2] != 3):
            enter_choice(board)
        else:
            board [0][2] = player_1
            print("After the player the move, the board:", board)    
      
    elif choice_player == 4:

        #open check
        if (board [1][0] != 4):
            enter_choice(board)
        else:    
             board [1][0] = player_1
             print("After the player the move, the board:", board)    

    elif choice_player == 5:

        #open check
        if (board [1][1] != "x"):
            enter_choice(board)
        else:
            board [1][1] = player_1
            print("After the player the move, the board:", board)     

    elif choice_player == 6:

        #open check
        if (board [1][2] != 6):
            enter_choice(board)
        else:
            board [1][2] = player_1
            print("After the player the move, the board:", board)     

    elif choice_player == 7:

         #open check
        if (board [2][0] != 7):
            enter_choice(board)
        else:
            board [2][0] = player_1
            print("After the player the move, the board:", board)     
            
        
    elif choice_player == 8:

        #open check
        if (board [2][1] != 8):
            enter_choice(board)
        else:
            board [2][1] = player_1
            print("After the player the move, the board:", board) 
            
                
    elif choice_player == 9:

        #open check
        if (board [2][2] != 9):
            enter_choice(board)
        else:
            board [2][2] = player_1
            print("After the player the move, the board:", board) 
    
    else:
        print("Sorry that is not a choice")
        enter_choice(board)
        
#~~End of enter_choice(board):


#~~Beginning of open_spaces(board):
def open_spaces(board):
    #print("All of the board's spaces currently:", board)
    
    #Morphing the board list into a tuple = the food is making a tuple out of row and column pairs
    #tuple_board = tuple(board)
    #print("Tuple of board:", tuple_board)

    list_open_spaces = []

    #row 1
    tuple_row_1 = ((board[0][0]),(board[0][1]),(board[0][2]))
    print("Row 1: ",tuple_row_1)


    #row 2
    tuple_row_2 = ((board[1][0]),(board[1][1]),(board[1][2]))
    print("Row 2: ",tuple_row_2)


    #row 3
    tuple_row_3 = ((board[2][0]),(board[2][1]),(board[2][2]))
    print("Row 3: ",tuple_row_3)
    
    #~~~Beginning of open space list building~~~~~
    
    #Beginning of for space in tuple_row_1 :
    for space in tuple_row_1 :
        #Beginning of if type(space) == int:
        if type(space) == int:
            list_open_spaces.append(space)
        #end of if type(space) == int:
    #End of for space in tuple_row_1 :

    #Beginning of for space in tuple_row_2 :
    for space in tuple_row_2 :
        #Beginning of if type(space) == int:
        if type(space) == int:
            list_open_spaces.append(space)
        #end of if type(space) == int:
    #End of for space in tuple_row_ 2


    #Beginning of for space in tuple_row_2 :
    for space in tuple_row_3 :
        #Beginning of if type(space) == int:
        if type(space) == int:
            list_open_spaces.append(space)
        #end of if type(space) == int:
    #End of for space in tuple_row_3
    

            
   
    
    #~~~End of open space list building~~~~~
    #printing the result
    print("List of all openings:",list_open_spaces)

#~~End of open_spaces(board):

#def victory_check(board, character):

#def cpu_move(board): 

#~~~~~~~~~~End of fxs 

#Test 3 - checks the player move accepts and alters
enter_choice(board)
#Test - 4 see if open spaces will work twice -itll be in a while when the game is finished
open_spaces(board)
enter_choice(board)
open_spaces(board)



#*******Absolute end of the script***************





